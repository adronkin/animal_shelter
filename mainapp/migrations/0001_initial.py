# Generated by Django 2.2.5 on 2019-10-15 15:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Core',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='заголовок объекта')),
                ('description', models.TextField(blank=True, null=True, verbose_name='описание объекта')),
                ('sort', models.IntegerField(blank=True, default=0, verbose_name='номер объекта для сортировки')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='активен ли объект')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='создан')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='обновлен')),
            ],
            options={
                'verbose_name': 'Ядро',
                'verbose_name_plural': 'Ядра',
                'ordering': ('-is_active', 'sort', 'name'),
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('core_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Core')),
            ],
            bases=('mainapp.core',),
        ),
        migrations.CreateModel(
            name='PetBreed',
            fields=[
                ('core_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Core')),
            ],
            bases=('mainapp.core',),
        ),
        migrations.CreateModel(
            name='PetCategory',
            fields=[
                ('core_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Core')),
            ],
            bases=('mainapp.core',),
        ),
        migrations.CreateModel(
            name='PetCharacter',
            fields=[
                ('core_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Core')),
            ],
            bases=('mainapp.core',),
        ),
        migrations.CreateModel(
            name='PetColor',
            fields=[
                ('core_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Core')),
            ],
            bases=('mainapp.core',),
        ),
        migrations.CreateModel(
            name='PetGender',
            fields=[
                ('core_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Core')),
            ],
            bases=('mainapp.core',),
        ),
        migrations.CreateModel(
            name='PetSize',
            fields=[
                ('core_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Core')),
            ],
            bases=('mainapp.core',),
        ),
        migrations.CreateModel(
            name='PetStatus',
            fields=[
                ('core_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Core')),
            ],
            bases=('mainapp.core',),
        ),
        migrations.CreateModel(
            name='PetWool',
            fields=[
                ('core_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Core')),
            ],
            bases=('mainapp.core',),
        ),
        migrations.CreateModel(
            name='Shelter',
            fields=[
                ('core_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Core')),
                ('shelter_logo', models.ImageField(blank=True, upload_to='shelter/images', verbose_name='логотип приюта')),
                ('shelter_address', models.CharField(max_length=255, unique=True, verbose_name='адрес')),
                ('shelter_phone', models.CharField(max_length=17, unique=True, verbose_name='телефон')),
                ('shelter_email', models.EmailField(max_length=254, unique=True, verbose_name='эл.почта')),
                ('shelter_city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='shelters', to='mainapp.City', verbose_name='город')),
            ],
            bases=('mainapp.core',),
        ),
        migrations.CreateModel(
            name='Social',
            fields=[
                ('core_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Core')),
                ('link', models.URLField(blank=True, null=True, unique=True, verbose_name='ссылка на соц.сеть')),
                ('obj', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='links', to='mainapp.Shelter')),
            ],
            bases=('mainapp.core',),
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('core_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Core')),
                ('image', models.ImageField(upload_to='images')),
                ('related_obj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='mainapp.Core', verbose_name='изображения')),
            ],
            options={
                'verbose_name': 'Картинка',
                'verbose_name_plural': 'Картинки',
                'ordering': ('sort', 'updated'),
            },
            bases=('mainapp.core',),
        ),
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('core_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Core')),
                ('age', models.PositiveIntegerField(default=0, verbose_name='возраст (лет)')),
                ('month', models.PositiveIntegerField(default=0, verbose_name='возраст (мес)')),
                ('pet_breed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.PetBreed')),
                ('pet_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.PetCategory')),
                ('pet_character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.PetCharacter')),
                ('pet_color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.PetColor')),
                ('pet_gender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.PetGender')),
                ('pet_shelter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pets', to='mainapp.Shelter')),
                ('pet_size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.PetSize')),
                ('pet_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.PetStatus')),
                ('pet_wool_length', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.PetWool')),
            ],
            bases=('mainapp.core',),
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('core_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Core')),
                ('url', models.CharField(default='#', max_length=255, verbose_name='ссылка')),
                ('css_class', models.CharField(blank=True, default='', max_length=30, verbose_name='CSS-Класс блока меню')),
                ('seen_guests', models.BooleanField(default=True, verbose_name='виден незарегистрированным пользователям')),
                ('seen_users', models.BooleanField(default=False, verbose_name='виден зарегистрированным пользователям')),
                ('seen_shelters', models.BooleanField(default=False, verbose_name='виден приютам')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submenus', to='mainapp.Menu', verbose_name='суперкласс меню')),
            ],
            options={
                'verbose_name': 'Элемент меню',
                'verbose_name_plural': 'Меню сайта',
                'ordering': ('parent_id', 'sort', 'name'),
            },
            bases=('mainapp.core',),
        ),
        migrations.CreateModel(
            name='Donate',
            fields=[
                ('core_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Core')),
                ('account', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='accounts', to='mainapp.Shelter', verbose_name='реквизиты счетов')),
            ],
            bases=('mainapp.core',),
        ),
    ]
